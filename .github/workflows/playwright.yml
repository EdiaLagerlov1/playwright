name: Playwright Python Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-playwright pytest-html
          playwright install --with-deps

      - name: Prepare test-results directory and debug env
        run: |
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE:-$PWD}"
          mkdir -p "${GITHUB_WORKSPACE}/test-results"
          chmod -R 755 "${GITHUB_WORKSPACE}/test-results"
          echo "Before tests, listing workspace root and test-results:"
          pwd
          ls -la "${GITHUB_WORKSPACE}" | sed -n '1,200p'
          ls -la "${GITHUB_WORKSPACE}/test-results" || true

      - name: Verify pytest and pytest-html
        run: |
          python -V
          pip show pytest pytest-html || true
          pytest --version

      - name: Run Playwright tests (ensure test-results exists immediately before pytest)
        run: |
          set -o pipefail -x
          # Make sure test-results exists in the very same step where pytest runs
          mkdir -p "${GITHUB_WORKSPACE}/test-results"
          chmod -R 755 "${GITHUB_WORKSPACE}/test-results"
          REPORT="${GITHUB_WORKSPACE}/test-results/report.html"
          echo "Writing HTML report to: $REPORT"
          pytest tests/ \
            --html="$REPORT" \
            --self-contained-html -v
          RC=$? || true
          echo "pytest exit code: $RC"
          echo "After pytest, listing test-results:"
          ls -la "${GITHUB_WORKSPACE}/test-results" || true
          echo "Full repo tree (top 300 lines):"
          ls -R "${GITHUB_WORKSPACE}" | sed -n '1,300p'
          echo "Find any HTML under workspace:"
          find "${GITHUB_WORKSPACE}" -type f -iname '*.html' -print || true
          # return pytest's exit code so the step behaves the same as before
          exit $RC

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: test-results/**    # include files inside the directory
          retention-days: 30